# utils/__init__.py
try:
    from utils.path_utils import project_paths
    from utils import file_utils
    from utils import git_utils
except ImportError:
    from path_utils import project_paths
    import file_utils
    import git_utils

# Make path manager available at package level
paths = project_paths


# services/__init__.py
try:
    from utils.path_utils import project_paths
    from services import file_tagger
    from services import metadata_service
except ImportError:
    import sys
    from pathlib import Path
    sys.path.insert(0, str(Path(__file__).parent.parent))
    from utils.path_utils import project_paths
    import file_tagger
    import metadata_service


# services/file_tagger.py
import os
from pathlib import Path
from typing import Optional

try:
    # Try importing as a package first
    from utils.path_utils import project_paths
    from utils import file_utils
except ImportError:
    # If that fails, add project root to path and try again
    import sys
    from pathlib import Path
    sys.path.insert(0, str(Path(__file__).parent.parent))
    from utils.path_utils import project_paths
    from utils import file_utils


def tag_file(file_path: str, tag: str) -> str:
    """Add a tag to file content."""
    try:
        full_path = project_paths.project_root / file_path
        with open(full_path, 'r') as f:
            content = f.read()
        return f"{tag}: {content}"
    except Exception as e:
        print(f"Error tagging file {file_path}: {e}")
        return ""


if __name__ == '__main__':
    # Test the function when run directly
    print("\nProject paths:")
    for name, path in project_paths.paths.items():
        print(f"{name}: {path}")

    test_file = 'README.md'
    result = tag_file(test_file, "TEST")
    print(f"\nTagged content for {test_file}:")
    print(result)


# notebooks/bronze_full_ingestion.ipynb
# Cell 1: Setup paths and imports
try:
    from utils.path_utils import project_paths
    from utils import file_utils, git_utils
    from services import file_tagger
except Exception as e:
    import sys
    from pathlib import Path
    # Add project root to path
    notebook_dir = Path().absolute()
    project_root = notebook_dir.parent
    if str(project_root) not in sys.path:
        sys.path.insert(0, str(project_root))
    # Try imports again
    from utils.path_utils import project_paths
    from utils import file_utils, git_utils
    from services import file_tagger

# Verify paths are set up correctly
print("Project paths:")
for name, path in project_paths.paths.items():
    print(f"{name}: {path}")

# Cell 2: Use the utilities
config = file_utils.read_json_config('bronze_config.json')
git_branch = git_utils.get_git_branch()
print(f"\nCurrent git branch: {git_branch}")
print(f"Configuration: {config}")

# Cell 3: Process files
input_file = 'example.txt'  # Replace with your file
tagged_content = file_tagger.tag_file(input_file, "bronze")
print(f"\nTagged content: {tagged_content}")
