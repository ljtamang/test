from typing import List, Optional, Union
from pathlib import Path

def get_files_from_directories(
    directories: List[Union[str, Path]], 
    file_types: Optional[List[str]] = None
) -> List[str]:
    """
    Retrieve all files from multiple directories that match the specified file types.
    
    Args:
        directories (List[Union[str, Path]]): List of directory paths to search in.
            Paths can be provided as strings or Path objects.
        file_types (Optional[List[str]], optional): List of file extensions to filter by.
            If None, all files will be included. Defaults to None.
            Example: ['.txt', '.pdf', '.doc']
    
    Returns:
        List[str]: A list of file paths that match the criteria.
        
    Raises:
        ValueError: If any of the provided directories don't exist.
        
    Example:
        >>> dirs = ['/path/to/dir1', '/path/to/dir2']
        >>> file_types = ['.txt', '.pdf']
        >>> files = get_files_from_directories(dirs, file_types)
    """
    all_files = []
    
    for directory in directories:
        # Convert string path to Path object if necessary
        dir_path = Path(directory) if isinstance(directory, str) else directory
        
        # Validate directory exists
        if not dir_path.exists() or not dir_path.is_dir():
            raise ValueError(f"Directory does not exist: {directory}")
            
        # Use the existing list_files function to get files from this directory
        files = list_files(str(dir_path), file_types)
        all_files.extend(files)
    
    return all_files
