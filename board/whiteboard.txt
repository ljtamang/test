def read_file_content(file_path: str, max_chars: Optional[int] = None, read_from_end: bool = False) -> Optional[str]:
    """
    Reads content of a file based on file type. Supports different file types and reading options.
    
    Args:
        file_path: Path to the file
        max_chars: Maximum number of characters to read. If None, reads all content.
        read_from_end: If True, reads from end of file. If False, reads from start.
                      Only applies when max_chars is specified.
    
    Returns:
        String content of file if successful, None if reading fails
    """
    file_extension = Path(file_path).suffix.lower()
    
    # Handle PDF files (placeholder)
    if file_extension == '.pdf':
        print(f"PDF reading not implemented yet for: {file_path}")
        return None
    
    # Handle other file types
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
            
            # If no max_chars specified, return all content
            if max_chars is None:
                return content.lower()
            
            # Handle partial content reading
            if read_from_end:
                return content[-max_chars:].lower()
            else:
                return content[:max_chars].lower()
                
    except Exception as e:
        print(f"Error reading file {file_path}: {str(e)}")
        return None
