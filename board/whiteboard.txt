# utils/__init__.py
from .common_utils import read_file_content, write_file_content, read_json_config
from .file_tagger import tag_file, save_tagged_file

# utils/common_utils.py
import os
import sys
import json
from pathlib import Path

# Path handling that works both in notebooks and when running directly
try:
    # For running as script
    current_dir = Path(os.path.dirname(os.path.abspath(__file__)))
except NameError:
    # For running in Databricks notebook
    current_dir = Path(os.getcwd())

project_root = current_dir.parent
if str(project_root) not in sys.path:
    sys.path.insert(0, str(project_root))

def read_file_content(file_path): ...
def write_file_content(file_path, content): ...
def read_json_config(config_name): ...

# utils/file_tagger.py
import os
import sys
from pathlib import Path

# Path handling that works both in notebooks and when running directly
try:
    # For running as script
    current_dir = Path(os.path.dirname(os.path.abspath(__file__)))
except NameError:
    # For running in Databricks notebook
    current_dir = Path(os.getcwd())

project_root = current_dir.parent
if str(project_root) not in sys.path:
    sys.path.insert(0, str(project_root))

# Now import from utils package
from utils import common_utils  # This will work in both contexts

def tag_file(file_path, tag): ...
def save_tagged_file(file_path, tag, output_path): ...

# notebooks/bronze_full_ingestion.py
import os
import sys
from pathlib import Path

# Path handling for notebook
notebook_dir = Path(os.getcwd())
project_root = notebook_dir.parent

if str(project_root) not in sys.path:
    sys.path.insert(0, str(project_root))

# Now import from utils package
from utils import common_utils, file_tagger
